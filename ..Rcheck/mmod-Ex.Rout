
R version 2.13.1 (2011-07-08)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "mmod"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('mmod')
Loading required package: adegenet
Loading required package: MASS
Loading required package: ade4

Attaching package: 'ade4'

The following object(s) are masked from 'package:base':

    within

   ==========================
    adegenet 1.3-1 is loaded
   ==========================

 - to start, type '?adegenet'
 - to browse adegenet website, type 'adegenetWeb()'
 - to post questions/comments: adegenet-forum@lists.r-forge.r-project.org


> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("D_Jost")
> ### * D_Jost
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: D_Jost
> ### Title: Calculate Jost's D
> ### Aliases: D_Jost
> 
> ### ** Examples
> 
> data(nancycats)
> D_Jost(nancycats)
$per.locus
      fca8      fca23      fca43      fca45      fca77      fca78      fca90 
0.42006021 0.23738411 0.21319208 0.14335289 0.42300076 0.13147655 0.31183460 
     fca96      fca37 
0.30740024 0.09737005 

$global.het
[1] 0.2350486

$global.harm_mean
[1] 0.3877368

> 
> 
> 
> cleanEx()
> nameEx("Gst_Hedrick")
> ### * Gst_Hedrick
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Gst_Hedrick
> ### Title: Calculate Nei's Gst using estimators for Hs and Ht
> ### Aliases: Gst_Hedrick
> 
> ### ** Examples
> 
> data(nancycats)
> Gst_Hedrick(nancycats)
$per.locus
     fca8     fca23     fca43     fca45     fca77     fca78     fca90     fca96 
0.4810570 0.2924881 0.2645865 0.1845960 0.4822798 0.1899390 0.3770880 0.3937947 
    fca37 
0.1574662 

$global
[1] 0.2994206

> 
> 
> 
> cleanEx()
> nameEx("Gst_Nei")
> ### * Gst_Nei
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Gst_Nei
> ### Title: Calculate Nei's Gst using estimators for Hs and Ht
> ### Aliases: Gst_Nei
> 
> ### ** Examples
> 
> data(nancycats)
> Gst_Nei(nancycats)
$per.locus
      fca8      fca23      fca43      fca45      fca77      fca78      fca90 
0.10517782 0.07225650 0.06532017 0.04814486 0.10273670 0.06731245 0.09482221 
     fca96      fca37 
0.12473941 0.06657894 

$global
[1] 0.08415178

> 
> 
> 
> cleanEx()
> nameEx("diff_stats")
> ### * diff_stats
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diff_stats
> ### Title: Calculate differentiation statistics for a genind objects
> ### Aliases: diff_stats
> 
> ### ** Examples
> 
> data(nancycats)
> diff_stats(nancycats)
$per.locus
             Hs        Ht        Gst Gprime_st          D
fca8  0.7708277 0.8614311 0.10517782 0.4810570 0.42006021
fca23 0.7415102 0.7992621 0.07225650 0.2924881 0.23738411
fca43 0.7416796 0.7935120 0.06532017 0.2645865 0.21319208
fca45 0.7273320 0.7641204 0.04814486 0.1845960 0.14335289
fca77 0.7766369 0.8655618 0.10273670 0.4822798 0.42300076
fca78 0.6316202 0.6772045 0.06731245 0.1899390 0.13147655
fca90 0.7369587 0.8141591 0.09482221 0.3770880 0.31183460
fca96 0.6699736 0.7654561 0.12473941 0.3937947 0.30740024
fca37 0.5623259 0.6024354 0.06657894 0.1574662 0.09737005

$global
        Hs         Ht    Gst_est  Gprime_st      D_het     D_mean 
0.70654052 0.77146027 0.08415178 0.29942062 0.23504860 0.20017978 

> 
> 
> 
> cleanEx()
> nameEx("diff_test")
> ### * diff_test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diff_test
> ### Title: An exact test of population differntiation for Genind objects
> ### Aliases: diff_test
> 
> ### ** Examples
> 
> data(nancycats)
> diff_test(nancycats, nreps=100)
Warning in FUN(X[[1L]], ...) :
  Ommiting individuals with NAs for locus fca8
Warning in FUN(X[[4L]], ...) :
  Ommiting individuals with NAs for locus fca45
Warning in FUN(X[[8L]], ...) :
  Ommiting individuals with NAs for locus fca96
      fca8      fca23      fca43      fca45      fca77      fca78      fca90 
0.00990099 0.00990099 0.00990099 0.00990099 0.00990099 0.00990099 0.00990099 
     fca96      fca37 
0.00990099 0.00990099 
> 
> 
> 
> cleanEx()
> nameEx("harmonic_mean")
> ### * harmonic_mean
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: harmonic_mean
> ### Title: Harmonic mean
> ### Aliases: harmonic_mean
> 
> ### ** Examples
> 
> data(nancycats)
> pop.sizes <- table(pop(nancycats))
> harmonic_mean(pop.sizes)
[1] 12.96096
> 
> 
> 
> cleanEx()
> nameEx("jacknife_populations")
> ### * jacknife_populations
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: jacknife_populations
> ### Title: Calculate differentiation stats for a jacknife sample of a
> ###   Genind opject
> ### Aliases: jacknife_populations
> 
> ### ** Examples
> 
> ## Not run: 
> ##D data(nancycats)
> ##D obs <- diff_stats(nancycats)
> ##D jn <- jacknife_populations(nancycats)
> ##D D_sampled <-jn[5,]
> ##D hist(D_sampled)
> ##D abline(h=obs$global)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("pairwise_D")
> ### * pairwise_D
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pairwise_D
> ### Title: Calculates pairwise values of Jost's D
> ### Aliases: pairwise_D
> 
> ### ** Examples
> 
> data(nancycats)
> pairwise_D(nancycats[1:26,])
          1         2
1 0.0000000 0.3792225
2 0.3792225 0.0000000
> 
> 
> 
> cleanEx()
> nameEx("pairwise_Gst_Hedrick")
> ### * pairwise_Gst_Hedrick
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pairwise_Gst_Hedrick
> ### Title: Calculates pairwise values of Hedrick's G'st
> ### Aliases: pairwise_Gst_Hedrick
> 
> ### ** Examples
> 
> data(nancycats)
> pairwise_Gst_Hedrick(nancycats[1:26,])
          1         2
1 0.0000000 0.4321858
2 0.4321858 0.0000000
> 
> 
> 
> cleanEx()
> nameEx("pairwise_Gst_Nei")
> ### * pairwise_Gst_Nei
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pairwise_Gst_Nei
> ### Title: Calculates pairwise values of Nei's Gst
> ### Aliases: pairwise_Gst_Nei
> 
> ### ** Examples
> 
> data(nancycats)
> pairwise_Gst_Nei(nancycats[1:26,])
           1          2
1 0.00000000 0.08531758
2 0.08531758 0.00000000
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  5.396 0.132 5.757 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
